name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache ninja-build

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install ccache ninja

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install ninja -y
          choco install ccache -y

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_STANDARD=20 -DSHINO_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Validate tag format (relaxed check for semantic versioning)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Warning: Tag $TAG does not follow semantic versioning format vX.Y.Z"
            echo "Proceeding anyway..."
          fi

      - name: Verify and Package
        shell: bash
        run: |
          set -eux
          # Find binary
          BIN=""
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            BIN=$(find build -name "ShinoEditor*.exe" -type f 2>/dev/null | head -n1)
          else
            # Try multiple locations
            BIN=$(find build -name "ShinoEditor" -type f 2>/dev/null | grep -v "\.dir\|CMakeFiles" | head -n1)
          fi
          if [[ -z "$BIN" ]]; then
            echo "Error: Built binary not found"
            echo "Searching for binary files..."
            find build -type f -name "ShinoEditor*" || true
            find build -type f -perm +111 -name "ShinoEditor*" 2>/dev/null || true
            exit 1
          fi
          echo "Found binary: $BIN"
          
          # Package
          OUT_DIR=dist
          mkdir -p "$OUT_DIR"
          NAME=ShinoEditor-${{ runner.os }}-${{ matrix.build_type }}
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            NAME=ShinoEditor-${{ runner.os }}-${{ runner.arch }}-${{ matrix.build_type }}
          fi
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell Compress-Archive -Path "$BIN","README.md","CHANGELOG.md" -DestinationPath "$OUT_DIR/$NAME.zip"
          else
            tar czf "$OUT_DIR/$NAME.tar.gz" "$BIN" README.md CHANGELOG.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
