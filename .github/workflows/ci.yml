name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    name: ${{ matrix.os }} / ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
    steps:
      - uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@v3.30.2

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Configure
        run: |
          cmake -S . -B build -DSHINO_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_STANDARD=20

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} -j 2

      - name: Test
        run: ctest --test-dir build --output-on-failure -C ${{ matrix.build_type }}

      - name: Verify binary exists
        shell: bash
        run: |
          set -e
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            BIN=$(ls build/**/ShinoEditor*.exe 2>/dev/null | head -n1)
          else
            BIN=$(ls build/ShinoEditor 2>/dev/null || true)
            if [[ -z "$BIN" ]]; then BIN=$(ls build/**/ShinoEditor 2>/dev/null | head -n1); fi
          fi
          if [[ -z "$BIN" ]]; then
            echo "Error: Built binary not found"
            exit 1
          fi


      - name: Install 7z on Windows (if needed)
        if: runner.os == 'Windows'
        run: |
          choco install -y 7zip || echo "7z not installed, will use PowerShell fallback"

      - name: Upload binary artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ShinoEditor-${{ runner.os }}-${{ matrix.build_type }}
          path: |
            build/ShinoEditor*
            build/**/ShinoEditor*.exe
          if-no-files-found: ignore

